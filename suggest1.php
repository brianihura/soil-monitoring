<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crop Suitability</title>
    <link rel="stylesheet" href="suggest1.css">
</head>
<body>
<header>
    <div class="navLinks">
        <nav>
            <ul>
                <li><a href="client.php">Home</a></li>
                <li><a href="graph.php">Graph</a></li>
                <li><a href="soilhealth.php">Soil Health</a></li>
            </ul>
        </nav>
    </div>
</header>

<div class="container">
<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "soil_monitoring";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Fetch latest soil data
$sensor_sql = "SELECT nitrogen, phosphorous, potassium, moisture, temperature 
               FROM soil_data 
               ORDER BY id DESC 
               LIMIT 1";
$sensor_result = $conn->query($sensor_sql);

if ($sensor_result->num_rows > 0) {
    $sensor_data = $sensor_result->fetch_assoc();
} else {
    die("<p class='error'>No sensor data found.</p>");
}

// Prepare data for ML script
$nitrogen = $sensor_data['nitrogen'];
$phosphorous = $sensor_data['phosphorous'];
$potassium = $sensor_data['potassium'];
$moisture = $sensor_data['moisture'];
$temperature = $sensor_data['temperature'];

// Convert data to JSON format for Python script
$data = json_encode([
    "nitrogen" => $nitrogen,
    "phosphorous" => $phosphorous,
    "potassium" => $potassium,
    "moisture" => $moisture,
    "temperature" => $temperature
]);

// Save data to a temporary file for the Python script
file_put_contents("input.json", $data);

// Run the Python script and capture the output
exec("python ml.py", $output, $return_var);

// Read the output file generated by the Python script
$outputFile = "output.txt";
if (file_exists($outputFile)) {
    $prediction = file_get_contents($outputFile);
} else {
    $prediction = "Prediction not available.";
}

// Query rule-based crop requirements
$sql = "SELECT * FROM crop_requirements";
$result = $conn->query($sql);

$suitable_crops = [];

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        if (
            $nitrogen >= $row['nitrogen_min'] && $nitrogen <= $row['nitrogen_max'] &&
            $phosphorous >= $row['phosphorus_min'] && $phosphorous <= $row['phosphorus_max'] &&
            $potassium >= $row['potassium_min'] && $potassium <= $row['potassium_max'] &&
            $moisture >= $row['moisture_min'] && $moisture <= $row['moisture_max'] &&
            $temperature >= $row['temperature_min'] && $temperature <= $row['temperature_max']
        ) {
            $suitable_crops[] = $row['crop_name'];
        }
    }
}

// Display rule-based suggestions
if (!empty($suitable_crops)) {
    echo "<div class='table-container'><h2>Rule-Based Suggestion</h2><table>";
    echo "<tr><th>#</th><th>Crop Name</th></tr>";
    foreach ($suitable_crops as $index => $crop) {
        echo "<tr><td>" . ($index + 1) . "</td><td>" . $crop . "</td></tr>";
    }
    echo "</table></div>";
} else {
    echo "<p class='error'>Soil is unhealthy.</p>";
}
$conn->close();
?>
<div class="machine">
    <h2>ML-Based Suggestion</h2>
    <div class="result"><?php echo htmlspecialchars($prediction); ?></div>
</div>
</div>
</body>
</html>
